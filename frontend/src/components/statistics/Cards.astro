---
import Card from "./Card.astro";

// Datos iniciales como "0" que luego se llenarán en cliente
let statistics = [
  { title: "Pomodoros", quantity: "0", icon: "tomato" },
  { title: "Short Breaks", quantity: "0", icon: "breakCoffee" },
  { title: "Long Breaks", quantity: "0", icon: "pauseCard" },
  { title: "Completed Tasks", quantity: "0", icon: "taskCompleted" },
];
---

<!-- Cards -->
<div
  class="grid grid-cols-2 md:grid-cols-4 gap-4 w-full"
  id="stats-cards-container"
>
  {
    statistics.map((stat) => (
      <Card title={stat.title} quantity={stat.quantity} icon={stat.icon} />
    ))
  }
</div>

<script>
  import { getStatistics } from '@scripts/tasksApi.js';

  async function updateStatistics() {
    try {
      const response = await getStatistics();
      if (response && response.success) {
        // Normalizar forma de datos por si vienen anidados en .data.data
        const payload = response?.data ?? {};
        const stats = payload?.data ?? payload ?? {};

        const container = document.getElementById("stats-cards-container");

        const statisticsData = [
          {
            title: "Pomodoros",
            quantity: stats.pomodorosCompleted ?? 0,
            icon: "tomato",
          },
          {
            title: "Short Breaks",
            quantity: stats.shortBreaks ?? 0,
            icon: "breakCoffee",
          },
          {
            title: "Long Breaks",
            quantity: stats.longBreaks ?? 0,
            icon: "pauseCard",
          },
          {
            title: "Completed Tasks",
            quantity: stats.tasksCompleted ?? 0,
            icon: "taskCompleted",
          },
        ];

        // Actualiza cantidades en las tarjetas existentes
        const cards = container.children;
        statisticsData.forEach((stat, index) => {
          const card = cards[index];
          if (card) {
            const quantityElement = card.querySelector(".stat-quantity");
            if (quantityElement) {
              quantityElement.textContent = stat.quantity;
            }
          }
        });
      } else {
        console.error(
          "Error al cargar las estadísticas:",
          response ? response.error : "No response"
        );
      }
    } catch (error) {
      console.error("Error al cargar las estadísticas:", error);
    }
  }

  // Ejecutar inmediatamente si DOM ya está listo
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', updateStatistics);
  } else {
    updateStatistics();
  }

  // Escuchar actualizaciones manuales
  document.addEventListener("stats-updated", updateStatistics);
</script>
